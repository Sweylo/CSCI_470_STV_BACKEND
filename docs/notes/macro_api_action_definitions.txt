users:

    - defines set of actions for user login

    * check_login - returns user_id and user_name if logged in, if not returns false/null
    * login - logs the user in using php sessions
    * logout - logs the user out using php sessions

boards:

    - defines set of actions for accessing board templates
    
    * get_board_by_id (get_board ? ) - returns the board data stored for that board in the database. Will
        be json generated by the backend when requested rather than generated and stored for the sake of not
        having to go back and edit the database record after the fact
        

matches: 

    - defines set of actions for match-making
    - must be logged in to access
    - match states:
        - 1 - "waiting for an opponent"
        - 2 - "setting up the game"
        - 3 - "playing the game"
        - 4 - "game has finished"

    * list_matches - lists all matches with state 1
    * create_match - creates a match and sets the state to 1
    * join_match - adds the user to the match and sets the state to 2 (calls init_match() to setup the board)
    * end_match - removes user from association in the database

gameplay: 

    - defines set of actions for handling the gameplay
    - must be logged in to access
    - must have already been joined to a match

    * move_piece - moves a piece on the board from one coordinate to another and removes any piece associated
        with the space moved to if it belongs to the opponent. The client will have to validate
        that this is a valid move to make

